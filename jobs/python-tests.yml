# Copied with so far minor modifications from
# https://github.com/asottile/azure-pipeline-templates/blob/master/job--python-tox.yml
parameters:
  toxenvs: []
  os: linux
  architectures: [x64]
  coverage: true
  additionalVariables: {}
  preTest: []
  namePostflix: ""

jobs:
  - job: ${{ format('tox_{0}{1}', parameters.os, parameters.namePostflix) }}
    strategy:
      matrix:
        ${{ each env in parameters.toxenvs }}:
          ${{ each arch in parameters.architectures }}:
            ${{ format('{0}_{1}', env, arch) }}:
              TOXENV: ${{ env }}
              arch: ${{ arch }}
              ${{ if or(eq(env, 'py34'), startsWith(env, 'py34-')) }}:
                py: "3.4"
              ${{ if or(eq(env, 'py35'), startsWith(env, 'py35-')) }}:
                py: "3.5"
              ${{ if or(eq(env, 'py36'), startsWith(env, 'py36-')) }}:
                py: "3.6"
              ${{ if or(eq(env, 'py37'), startsWith(env, 'py37-')) }}:
                py: "3.7"
              ${{ if or(eq(env, 'py38'), startsWith(env, 'py38-')) }}:
                py: "3.8"
              ${{ if or(eq(env, 'pypy3'), startsWith(env, 'pypy3-')) }}:
                py: "pypy3"
              # we'll run tox using this on py39
              ${{ if or(eq(env, 'py39'), startsWith(env, 'py39-')) }}:
                py: "3.8"
                ispy39: true
              # Use Python 3.8 by default for toxenvs that don't start with "py"
              ${{ if not(startsWith(env, 'py')) }}:
                py: "3.8"

    pool:
      ${{ if eq(parameters.os, 'linux') }}:
        vmImage: ubuntu-18.04
      ${{ if eq(parameters.os, 'windows') }}:
        vmImage: windows-2019
      ${{ if eq(parameters.os, 'macos') }}:
        vmImage: macOS-10.14

    variables:
      ${{ if eq(parameters.os, 'windows') }}:
        bindir: Scripts
      ${{ if ne(parameters.os, 'windows') }}:
        bindir: bin
      ${{ insert }}: ${{ parameters.additionalVariables }}

    steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: $(py)
          architecture: $(arch)

      - script: |
          sudo add-apt-repository ppa:deadsnakes/nightly
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends python3.9-dev python3.9-distutils
        condition: variables.ispy39
        displayName: Install python 3.9

      - ${{ parameters.preTest }}

      - script: python -m pip install --upgrade tox setuptools virtualenv wheel
        displayName: install tox
      - script: tox
        displayName: Run tox

      - ${{ if eq(parameters.coverage, true) }}:
        - bash: .tox/$(TOXENV)/$(bindir)/coverage xml -o coverage.xml
          displayName: Generate coverage xml
        - task: PublishCodeCoverageResults@1
          inputs:
            codeCoverageTool: cobertura
            summaryFileLocation: coverage.xml
          displayName: Publish coverage artifact
